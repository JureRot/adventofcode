if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
tree$c["parent"] <- line[1]
}
}
}
tree
tree$vpryah
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
tree[[c]]["parent"] <- line[1]
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
print(c)
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- list(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- list(name=line[1], weight=as.integer(line[2]), child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
#tree <- list(name, weight, parent, child'')
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- list(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- list(name=line[1], weight=as.integer(line[2]), child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
}
}
}
tree
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- list(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- list(name=line[1], weight=as.integer(line[2]), child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), paretn=NULL, child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), parent=NULL, child=list())
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), paretn=NULL,child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), child=list(line[3:length(line)]))
for (c in line[3:length(line)]) {
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), child=c(line[3:length(line)]))
for (c in line[3:length(line)]) {
}
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- list(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), child=c(line[3:length(line)]))
}
}
input_file = file("input2017_07.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
#print(line)
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
# node <- list(name, weight, parent, child) (maybe need a sequential number instead of name)
# tree <- matrix(list, nrow=1, byrow=TRUE)
# tree <- rbind(matrix, new_node)
#other option is OOP (s3, s4, reference class) (s3 is the basic)
# idea:
#   make a list of nodes (lists)
#   nodes are named (not numbered sequentially
#   nodes are lists with name, weight, name of parent, name of child
tree <- c(name, weight, parent, child)
for (line in input) {
line <- gsub("[/(|/)]", "", line)
line <- gsub(" -> ", " ", line)
line <- gsub(",", "", line)
line <- unlist(strsplit(line, " "))
if (length(line) == 2) { #no children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]))
} else { #some children
tree[[line[1]]] <- c(name=line[1], weight=as.integer(line[2]), child=c(line[3:length(line)]))
}
}
