registers <- set(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers <- sub(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers <- mul(registers, input[[i]][2], input[[i]][3])
i <- i + 1
num_mul <- num_mul + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers, input[[i]][2], input[[i]][3])
}
#takes a few seconds
}
#part two
registers2 <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers2[[r]] <- 0
}
registers2[["a"]] <- 1
i <- 1
while((i >= 1) & (i <= length(input))) {
#for (bla in 1:1000) {
if (input[[i]][1] == "set") {
registers2 <- set(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers2 <- sub(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers2 <- mul(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers2, input[[i]][2], input[[i]][3])
}
print(registers2)
#takes a more than a few seconds
}
input_file = file("input2017_23.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- strsplit(input, " ")
get_value <- function(registers, x) {#gets value of x, number or register
value <- 0
if (suppressWarnings(!is.na(as.numeric(x)))) { #input is number
value <- as.numeric(x) #we just use the number
} else { #is register name
value <- registers[[x]]
}
return(value)
}
set <- function(registers, x, y) { #sets reg x with value y
registers[[x]] <- get_value(registers, y)
return(registers)
}
sub <- function(registers, x, y) { #decrease the value of reg x by value of y
registers[[x]] <- registers[[x]] - get_value(registers, y)
return(registers)
}
mul <- function(registers, x, y) { #multiplies the value of reg x by value of y
registers[[x]] <- registers[[x]] * get_value(registers, y)
return(registers)
}
jnz <- function(registers, x, y) { #if value of x not zero, we jump with offset y (plus or minus)
offset <- 1 #default offset is one (just go to next command)
if (get_value(registers, x) != 0) { #if value of x greater than zero we change value of offset
offset <- get_value(registers, y)
}
return(offset)
}
registers <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers[[r]] <- 0
}
num_mul <- 0
i <- 1
while((i >= 1) & (i <= length(input))) {
#for (bla in 1:1000) {
if (input[[i]][1] == "set") {
registers <- set(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers <- sub(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers <- mul(registers, input[[i]][2], input[[i]][3])
i <- i + 1
num_mul <- num_mul + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers, input[[i]][2], input[[i]][3])
}
#takes a few seconds
}
#part two
registers2 <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers2[[r]] <- 0
}
registers2[["a"]] <- 1
i <- 1
while((i >= 1) & (i <= length(input))) {
#for (bla in 1:1000) {
if (input[[i]][1] == "set") {
registers2 <- set(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers2 <- sub(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers2 <- mul(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers2, input[[i]][2], input[[i]][3])
}
print(c(registers2$a, registers2$b, registers2$c, registers2$d, registers2$e, registers2$f, registers2$g, registers2$h))
#takes a more than a few seconds
}
print(c(registers$a, registers$b, registers$c, registers$d, registers$e, registers$f, registers$g, registers$h))
input_file = file("input2017_23.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- strsplit(input, " ")
get_value <- function(registers, x) {#gets value of x, number or register
value <- 0
if (suppressWarnings(!is.na(as.numeric(x)))) { #input is number
value <- as.numeric(x) #we just use the number
} else { #is register name
value <- registers[[x]]
}
return(value)
}
set <- function(registers, x, y) { #sets reg x with value y
registers[[x]] <- get_value(registers, y)
return(registers)
}
sub <- function(registers, x, y) { #decrease the value of reg x by value of y
registers[[x]] <- registers[[x]] - get_value(registers, y)
return(registers)
}
mul <- function(registers, x, y) { #multiplies the value of reg x by value of y
registers[[x]] <- registers[[x]] * get_value(registers, y)
return(registers)
}
jnz <- function(registers, x, y) { #if value of x not zero, we jump with offset y (plus or minus)
offset <- 1 #default offset is one (just go to next command)
if (get_value(registers, x) != 0) { #if value of x greater than zero we change value of offset
offset <- get_value(registers, y)
}
return(offset)
}
registers <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers[[r]] <- 0
}
num_mul <- 0
i <- 1
while((i >= 1) & (i <= length(input))) {
#for (bla in 1:1000) {
if (input[[i]][1] == "set") {
registers <- set(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers <- sub(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers <- mul(registers, input[[i]][2], input[[i]][3])
i <- i + 1
num_mul <- num_mul + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers, input[[i]][2], input[[i]][3])
}
#takes a few seconds
}
#part two
registers2 <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers2[[r]] <- 0
}
registers2[["a"]] <- 1
i <- 1
#while((i >= 1) & (i <= length(input))) {
for (bla in 1:100) {
if (input[[i]][1] == "set") {
registers2 <- set(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers2 <- sub(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers2 <- mul(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers2, input[[i]][2], input[[i]][3])
}
print(c(registers2$a, registers2$b, registers2$c, registers2$d, registers2$e, registers2$f, registers2$g, registers2$h))
#takes a more than a few seconds
}
num_mul
a <- 93
b <- 93
(a-2)*(b-2)
r <- (a-2)*(b-2)
((a-2)*(b-2)) / r
a <- 109300
b<- 126300
((a-2)*(b-2)) / r
input_file = file("input2017_23.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- strsplit(input, " ")
get_value <- function(registers, x) {#gets value of x, number or register
value <- 0
if (suppressWarnings(!is.na(as.numeric(x)))) { #input is number
value <- as.numeric(x) #we just use the number
} else { #is register name
value <- registers[[x]]
}
return(value)
}
set <- function(registers, x, y) { #sets reg x with value y
registers[[x]] <- get_value(registers, y)
return(registers)
}
sub <- function(registers, x, y) { #decrease the value of reg x by value of y
registers[[x]] <- registers[[x]] - get_value(registers, y)
return(registers)
}
mul <- function(registers, x, y) { #multiplies the value of reg x by value of y
registers[[x]] <- registers[[x]] * get_value(registers, y)
return(registers)
}
jnz <- function(registers, x, y) { #if value of x not zero, we jump with offset y (plus or minus)
offset <- 1 #default offset is one (just go to next command)
if (get_value(registers, x) != 0) { #if value of x greater than zero we change value of offset
offset <- get_value(registers, y)
}
return(offset)
}
registers <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers[[r]] <- 0
}
num_mul <- 0
i <- 1
while((i >= 1) & (i <= length(input))) {
#for (bla in 1:1000) {
if (input[[i]][1] == "set") {
registers <- set(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers <- sub(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers <- mul(registers, input[[i]][2], input[[i]][3])
i <- i + 1
num_mul <- num_mul + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers, input[[i]][2], input[[i]][3])
}
#takes a few seconds
}
#part two
registers2 <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers2[[r]] <- 0
}
registers2[["a"]] <- 1
i <- 1
#while((i >= 1) & (i <= length(input))) {
for (bla in 1:100) {
if (input[[i]][1] == "set") {
registers2 <- set(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers2 <- sub(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers2 <- mul(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers2, input[[i]][2], input[[i]][3])
}
if (registers2$h == 1) {
print(c(registers2$a, registers2$b, registers2$c, registers2$d, registers2$e, registers2$f, registers2$g, registers2$h))
}
#takes a more than a few seconds
}
num_mul
input_file = file("input2017_23.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- strsplit(input, " ")
get_value <- function(registers, x) {#gets value of x, number or register
value <- 0
if (suppressWarnings(!is.na(as.numeric(x)))) { #input is number
value <- as.numeric(x) #we just use the number
} else { #is register name
value <- registers[[x]]
}
return(value)
}
set <- function(registers, x, y) { #sets reg x with value y
registers[[x]] <- get_value(registers, y)
return(registers)
}
sub <- function(registers, x, y) { #decrease the value of reg x by value of y
registers[[x]] <- registers[[x]] - get_value(registers, y)
return(registers)
}
mul <- function(registers, x, y) { #multiplies the value of reg x by value of y
registers[[x]] <- registers[[x]] * get_value(registers, y)
return(registers)
}
jnz <- function(registers, x, y) { #if value of x not zero, we jump with offset y (plus or minus)
offset <- 1 #default offset is one (just go to next command)
if (get_value(registers, x) != 0) { #if value of x greater than zero we change value of offset
offset <- get_value(registers, y)
}
return(offset)
}
registers <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers[[r]] <- 0
}
num_mul <- 0
i <- 1
while((i >= 1) & (i <= length(input))) {
#for (bla in 1:1000) {
if (input[[i]][1] == "set") {
registers <- set(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers <- sub(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers <- mul(registers, input[[i]][2], input[[i]][3])
i <- i + 1
num_mul <- num_mul + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers, input[[i]][2], input[[i]][3])
}
#takes a few seconds
}
#part two
registers2 <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers2[[r]] <- 0
}
registers2[["a"]] <- 1
i <- 1
while((i >= 1) & (i <= length(input))) {
#for (bla in 1:100) {
if (input[[i]][1] == "set") {
registers2 <- set(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers2 <- sub(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers2 <- mul(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers2, input[[i]][2], input[[i]][3])
}
if (registers2$h == 1) {
print(c(registers2$a, registers2$b, registers2$c, registers2$d, registers2$e, registers2$f, registers2$g, registers2$h))
}
#takes a more than a few seconds
}
input_file = file("input2017_23.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- strsplit(input, " ")
get_value <- function(registers, x) {#gets value of x, number or register
value <- 0
if (suppressWarnings(!is.na(as.numeric(x)))) { #input is number
value <- as.numeric(x) #we just use the number
} else { #is register name
value <- registers[[x]]
}
return(value)
}
set <- function(registers, x, y) { #sets reg x with value y
registers[[x]] <- get_value(registers, y)
return(registers)
}
sub <- function(registers, x, y) { #decrease the value of reg x by value of y
registers[[x]] <- registers[[x]] - get_value(registers, y)
return(registers)
}
mul <- function(registers, x, y) { #multiplies the value of reg x by value of y
registers[[x]] <- registers[[x]] * get_value(registers, y)
return(registers)
}
jnz <- function(registers, x, y) { #if value of x not zero, we jump with offset y (plus or minus)
offset <- 1 #default offset is one (just go to next command)
if (get_value(registers, x) != 0) { #if value of x greater than zero we change value of offset
offset <- get_value(registers, y)
}
return(offset)
}
registers <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers[[r]] <- 0
}
num_mul <- 0
i <- 1
while((i >= 1) & (i <= length(input))) {
#for (bla in 1:1000) {
if (input[[i]][1] == "set") {
registers <- set(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers <- sub(registers, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers <- mul(registers, input[[i]][2], input[[i]][3])
i <- i + 1
num_mul <- num_mul + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers, input[[i]][2], input[[i]][3])
}
#takes a few seconds
if (registers$h == 1) {
print(c(registers$a, registers$b, registers$c, registers$d, registers$e, registers$f, registers$g, registers$h))
}
}
#part two
registers2 <- new.env()
for (r in c("a", "b", "c", "d", "e", "f", "g", "h")) { #we init all registers with zeros
registers2[[r]] <- 0
}
registers2[["a"]] <- 1
i <- 1
while((i >= 1) & (i <= length(input))) {
#for (bla in 1:100) {
if (input[[i]][1] == "set") {
registers2 <- set(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "sub") {
registers2 <- sub(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "mul") {
registers2 <- mul(registers2, input[[i]][2], input[[i]][3])
i <- i + 1
} else if (input[[i]][1] == "jnz") {
i <- i + jnz(registers2, input[[i]][2], input[[i]][3])
}
if (registers2$h == 1) {
print(c(registers2$a, registers2$b, registers2$c, registers2$d, registers2$e, registers2$f, registers2$g, registers2$h))
}
#takes a more than a few seconds
}
print(c(registers2$a, registers2$b, registers2$c, registers2$d, registers2$e, registers2$f, registers2$g, registers2$h))
109300 - 126300
109300 - 126300
17000 - (1000*17)
