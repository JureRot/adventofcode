to_rm <- match(paste(c(x, y), collapse=","), infected) #find the index of node
infected <- infected[-to_rm] #remove it
flagged <- c(flagged, paste(c(x, y), collapse=",")) #add to flagged
} else if (current_flagged) { #current flagged
dir <- (dir + 2) %% 4 #reverse dir
#flagged becomes clean
to_rm <- match(paste(c(x, y), collapse=","), flagged) #find the index of node
flagged <- flagged[-to_rm] #remove it
} else { #current clean
dir <- (dir + 1) %% 4 #turn left
#becomes weakened
weakened <- c(weakened, paste(c(x, y), collapse=","))
}
#change position
if (dir == 0) { #if facing right
x <- x + 1
} else if (dir == 1) { #if facing up
y <- y - 1
} else if (dir == 2) { #if facing left
x <- x - 1
} else if (dir == 3) { #if facing down
y <- y + 1
}
#THIS TAKES A WHILE (like a good while)
print(burst2)
}
input_file = file("input2017_22.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- c("..#", "#..", "...") #test input
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
infected[[paste(c(c, l), collapse=",")]]
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations <- 0
input_file = file("input2017_22.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- c("..#", "#..", "...") #test input
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]]
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations <- 0
grid
input_file = file("input2017_22.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- c("..#", "#..", "...") #test input
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]] <- "i"
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations <- 0
grid
grid[["2,2"]]
input_file = file("input2017_22.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- c("..#", "#..", "...") #test input
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]] <- "i"
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations <- 0
for (burst in 1:10000) {
current <- grid[[paste(c(x,y), collapse=",")]]
if (!is.null(current_infected)) { #if current is infected
dir <- (dir - 1) %% 4 #turn right
grid[[paste(c(x,y), collapse=",")]] <- NULL #remove it (thus make it clean)
} else { #if clean
dir <- (dir + 1) %% 4 #turn left
grid[[paste(c(x,y), collapse=",")]] <- "i" #add it as infected
infestations <- infestations + 1 #keep track of number of infestations
}
#change position
if (dir == 0) { #if facing right
x <- x + 1
} else if (dir == 1) { #if facing up
y <- y - 1
} else if (dir == 2) { #if facing left
x <- x - 1
} else if (dir == 3) { #if facing down
y <- y + 1
}
}
infestations
input_file = file("input2017_22.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- c("..#", "#..", "...") #test input
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]] <- "i"
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations <- 0
for (burst in 1:10000) {
current <- grid[[paste(c(x,y), collapse=",")]]
if (!is.null(current)) { #if current is infected
dir <- (dir - 1) %% 4 #turn right
grid[[paste(c(x,y), collapse=",")]] <- NULL #remove it (thus make it clean)
} else { #if clean
dir <- (dir + 1) %% 4 #turn left
grid[[paste(c(x,y), collapse=",")]] <- "i" #add it as infected
infestations <- infestations + 1 #keep track of number of infestations
}
#change position
if (dir == 0) { #if facing right
x <- x + 1
} else if (dir == 1) { #if facing up
y <- y - 1
} else if (dir == 2) { #if facing left
x <- x - 1
} else if (dir == 3) { #if facing down
y <- y + 1
}
}
infestations
x <- NULL
x == "i"
input_file = file("input2017_22.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- c("..#", "#..", "...") #test input
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]] <- "i"
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations <- 0
for (burst in 1:10000) {
current <- grid[[paste(c(x,y), collapse=",")]]
if (!is.null(current)) { #if current is infected
dir <- (dir - 1) %% 4 #turn right
grid[[paste(c(x,y), collapse=",")]] <- NULL #remove it (thus make it clean)
} else { #if clean
dir <- (dir + 1) %% 4 #turn left
grid[[paste(c(x,y), collapse=",")]] <- "i" #add it as infected
infestations <- infestations + 1 #keep track of number of infestations
}
#change position
if (dir == 0) { #if facing right
x <- x + 1
} else if (dir == 1) { #if facing up
y <- y - 1
} else if (dir == 2) { #if facing left
x <- x - 1
} else if (dir == 3) { #if facing down
y <- y + 1
}
}
#take two
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]] <- "i"
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations2 <- 0
for (burst2 in 1:10000000) {
current <- grid[[paste(c(x,y), collapse=",")]]
if (is.null(current)) { #current clear
#turn left
dir <- (dir + 1) %% 4
#becomes weakened
grid[[paste(c(x,y), collapse=",")]] <- "w"
} else if (current == "w") { #current weakened
#doesnt turn
#weakened becomes infected
grid[[paste(c(x,y), collapse=",")]] <- "i"
#note number of infestations
infestations2 <- infestations2 + 1
} else if (current == "i") { #current infected
#turn right
dir <- (dir - 1) %% 4
#infected becomes flagged
grid[[paste(c(x,y), collapse=",")]] <- "f"
} else if (current == "f") { #current flagged
#reverse dir
dir <- (dir + 2) %% 4
#flagged becomes clean
grid[[paste(c(x,y), collapse=",")]] <- NULL
}
#change position
if (dir == 0) { #if facing right
x <- x + 1
} else if (dir == 1) { #if facing up
y <- y - 1
} else if (dir == 2) { #if facing left
x <- x - 1
} else if (dir == 3) { #if facing down
y <- y + 1
}
}
input_file = file("input2017_22.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- c("..#", "#..", "...") #test input
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]] <- "i"
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations <- 0
for (burst in 1:10000) {
current <- grid[[paste(c(x,y), collapse=",")]]
if (!is.null(current)) { #if current is infected
dir <- (dir - 1) %% 4 #turn right
grid[[paste(c(x,y), collapse=",")]] <- NULL #remove it (thus make it clean)
} else { #if clean
dir <- (dir + 1) %% 4 #turn left
grid[[paste(c(x,y), collapse=",")]] <- "i" #add it as infected
infestations <- infestations + 1 #keep track of number of infestations
}
#change position
if (dir == 0) { #if facing right
x <- x + 1
} else if (dir == 1) { #if facing up
y <- y - 1
} else if (dir == 2) { #if facing left
x <- x - 1
} else if (dir == 3) { #if facing down
y <- y + 1
}
}
#take two
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]] <- "i"
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations2 <- 0
for (burst2 in 1:10000000) {
current <- grid[[paste(c(x,y), collapse=",")]]
if (is.null(current)) { #current clear
#turn left
dir <- (dir + 1) %% 4
#becomes weakened
grid[[paste(c(x,y), collapse=",")]] <- "w"
} else if (current == "w") { #current weakened
#doesnt turn
#weakened becomes infected
grid[[paste(c(x,y), collapse=",")]] <- "i"
#note number of infestations
infestations2 <- infestations2 + 1
} else if (current == "i") { #current infected
#turn right
dir <- (dir - 1) %% 4
#infected becomes flagged
grid[[paste(c(x,y), collapse=",")]] <- "f"
} else if (current == "f") { #current flagged
#reverse dir
dir <- (dir + 2) %% 4
#flagged becomes clean
grid[[paste(c(x,y), collapse=",")]] <- NULL
}
#change position
if (dir == 0) { #if facing right
x <- x + 1
} else if (dir == 1) { #if facing up
y <- y - 1
} else if (dir == 2) { #if facing left
x <- x - 1
} else if (dir == 3) { #if facing down
y <- y + 1
}
print(burst2)
}
input_file = file("input2017_22.txt", "r")
input <- ""
while ( TRUE ) {
line = readLines(input_file, n = 1)
if ( length(line) == 0 ) {
break
}
if (input[1] == "") {
input <- line
} else {
input <- c(input, line)
}
}
close(input_file)
input <- c("..#", "#..", "...") #test input
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]] <- "i"
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations <- 0
for (burst in 1:10000) {
current <- grid[[paste(c(x,y), collapse=",")]]
if (!is.null(current)) { #if current is infected
dir <- (dir - 1) %% 4 #turn right
grid[[paste(c(x,y), collapse=",")]] <- NULL #remove it (thus make it clean)
} else { #if clean
dir <- (dir + 1) %% 4 #turn left
grid[[paste(c(x,y), collapse=",")]] <- "i" #add it as infected
infestations <- infestations + 1 #keep track of number of infestations
}
#change position
if (dir == 0) { #if facing right
x <- x + 1
} else if (dir == 1) { #if facing up
y <- y - 1
} else if (dir == 2) { #if facing left
x <- x - 1
} else if (dir == 3) { #if facing down
y <- y + 1
}
}
#take two
grid <- list() #string(x),string(y) (comma separator) names
for (l in 1:length(input)) { #mark all infected in input
line <- unlist(strsplit(input[l], ""))
for (c in 1:length(line)) {
if (line[c] == "#") {
grid[[paste(c(c, l), collapse=",")]] <- "i"
}
}
}
x <- ceiling(length(input)/2) #middle of columns (half of num rows)
y <- ceiling(nchar(input[1])/2) #middle of rows (half of num columns)
dir <- 1 #0:right(+x), 1:up(-y), 2:left(-x), 3:down(-y) (default poiting up)
infestations2 <- 0
for (burst2 in 1:10000000) {
current <- grid[[paste(c(x,y), collapse=",")]]
if (is.null(current)) { #current clear
#turn left
dir <- (dir + 1) %% 4
#becomes weakened
grid[[paste(c(x,y), collapse=",")]] <- "w"
} else if (current == "w") { #current weakened
#doesnt turn
#weakened becomes infected
grid[[paste(c(x,y), collapse=",")]] <- "i"
#note number of infestations
infestations2 <- infestations2 + 1
} else if (current == "i") { #current infected
#turn right
dir <- (dir - 1) %% 4
#infected becomes flagged
grid[[paste(c(x,y), collapse=",")]] <- "f"
} else if (current == "f") { #current flagged
#reverse dir
dir <- (dir + 2) %% 4
#flagged becomes clean
grid[[paste(c(x,y), collapse=",")]] <- NULL
}
#change position
if (dir == 0) { #if facing right
x <- x + 1
} else if (dir == 1) { #if facing up
y <- y - 1
} else if (dir == 2) { #if facing left
x <- x - 1
} else if (dir == 3) { #if facing down
y <- y + 1
}
#STILL TAKES A WHILE (like 5 min)
}
burst2
